import streamlit as st
from pyvis.network import Network

# Configurar el t칤tulo de la aplicaci칩n
st.set_page_config(page_title="Mapa Conceptual de Ciencia de Datos", layout="wide")

# Encabezado
st.title("游늵 Mapa Conceptual de Ciencia de Datos")

st.markdown("""
### **Descripci칩n**
Este mapa conceptual presenta una estructura clara sobre los fundamentos de la ciencia de datos, 
incluyendo t칠rminos clave como Big Data, Miner칤a de Datos, Python, Machine Learning, y m치s. 
Cada nodo representa un concepto fundamental y su relaci칩n con otros elementos dentro del campo.
""")

# Crear el gr치fico con pyvis
net = Network(height="750px", width="100%", bgcolor="#222222", font_color="white")

# Agregar nodos principales
net.add_node("Ciencia de Datos", label="Ciencia de Datos", color="lightblue")

# Conexiones con Big Data y Estad칤stica
net.add_node("Big Data", label="Big Data", color="orange")
net.add_node("Estad칤stica", label="Estad칤stica", color="orange")
net.add_edge("Ciencia de Datos", "Big Data", label="Gesti칩n de Datos Masivos")
net.add_edge("Ciencia de Datos", "Estad칤stica", label="Base Matem치tica")

# Subtemas de Big Data
big_data_subtopics = {
    "Volumen": ["Almacenamiento", "Escalabilidad"],
    "Velocidad": ["Procesamiento en Tiempo Real", "Baja Latencia"],
    "Variedad": ["Estructurados", "No Estructurados", "Semi-Estructurados"],
    "Veracidad": ["Calidad de Datos", "Fuentes Confiables"],
    "Valor": ["An치lisis Predictivo", "Toma de Decisiones"]
}

for parent, children in big_data_subtopics.items():
    net.add_node(parent, label=parent, color="yellow")
    net.add_edge("Big Data", parent)
    for child in children:
        net.add_node(child, label=child, color="lightyellow")
        net.add_edge(parent, child)

# Subtemas de Estad칤stica
for subtema in ["Inferencial", "Descriptiva"]:
    net.add_node(subtema, label=subtema, color="yellow")
    net.add_edge("Estad칤stica", subtema)

# Relaci칩n con Python y Herramientas
net.add_node("Python", label="Python", color="green")
for herramienta in ["Pandas", "NumPy", "Scikit-Learn", "Matplotlib", "Seaborn"]:
    net.add_node(herramienta, label=herramienta, color="lightgreen")
    net.add_edge("Python", herramienta, label="Librer칤as")
net.add_edge("Ciencia de Datos", "Python", label="Lenguaje de Programaci칩n")

# Miner칤a de Datos
net.add_node("Miner칤a de Datos", label="Miner칤a de Datos", color="purple")
for subtema in ["Clasificaci칩n", "Agrupaci칩n", "Regresi칩n", "Asociaci칩n", "Reducci칩n de Dimensionalidad"]:
    net.add_node(subtema, label=subtema, color="pink")
    net.add_edge("Miner칤a de Datos", subtema)
net.add_edge("Ciencia de Datos", "Miner칤a de Datos", label="Extracci칩n de Conocimiento")

# Conectar Ciencia de Datos con m치s subtemas
subtemas_cd = {
    "Blockchain": ["Seguridad de Datos", "Contratos Inteligentes"],
    "Cloud Computing": ["IA en la Nube", "Almacenamiento Distribuido"],
    "Edge Computing": ["Procesamiento en el Borde", "Reducci칩n de Latencia"],
    "칄tica en Ciencia de Datos": ["Privacidad", "Sesgo en Datos"],
    "Procesamiento de Lenguaje Natural": ["An치lisis de Sentimientos", "Traducci칩n Autom치tica"],
    "Ingenier칤a de Caracter칤sticas": ["Selecci칩n de Caracter칤sticas", "Transformaci칩n de Datos"],
    "Optimizaci칩n": ["Algoritmos Gen칠ticos", "Descenso de Gradiente"]
}

for parent, children in subtemas_cd.items():
    net.add_node(parent, label=parent, color="cyan")
    net.add_edge("Ciencia de Datos", parent)
    for child in children:
        net.add_node(child, label=child, color="lightblue")
        net.add_edge(parent, child)

# Guardar y mostrar el gr치fico en Streamlit
net.save_graph("mapa_conceptual.html")
st.markdown("### **Mapa Conceptual Interactivo**")
st.components.v1.html(open("mapa_conceptual.html", "r").read(), height=750)

# Exportaci칩n del mapa conceptual
st.markdown("### **游녠 Descarga tu Mapa Conceptual**")
st.markdown("Puedes hacer clic derecho sobre la imagen y guardarla como PNG o usar herramientas como Print Screen para capturarla.")
